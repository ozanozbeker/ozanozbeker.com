{
  "hash": "777a49e4b87c288f62bbc0a90f35becd",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"My R & RStudio Setup\"\ndescription: \"The code any why behind my setup, as well as some shoutouts.\"\ndate: \"2024-06-13\"\ncategories: [\"R\", \"RStudio\", \"Workstation\"]\nimage: ../resources/images/rstudio_logo.png\nexecute: \n  eval: false\n  cache: false\nformat:\n  html: \n    code-links:\n      - text: \"Repo\"\n        icon: github\n        href: https://github.com/ozanozbeker/r-and-rstudio-setup\n---\n\n\n\n# Intro\n\nThis is a hybrid blog post/README/code file where it is the actual code file I use when I update my R environment/computer, but also I wrote some descriptions along the way so if somebody else stumbles upon this and likes what they see, they can copy it or maybe even find something new that they didn't know about before.\n\nI original wrote this as the README for the GitHub page, but if you are reading this in my blog, welcome!\n\n# Packages\n\nThese are the packages I most frequently use, loosely grouped into the categories below. This does not include dependency packages. So for example, I use `quarto` to render Quarto documents via R code, but I don't directly use the `markdown` package myself, so it is not listed below.\n\nYou can find the info page for each package at `https://cran.r-project.org/web/packages/[package_name]/index.html` where `[package_name]` is the name of the package.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ninstall.packages(c(\n  # Meta Packages\n  'tidyverse',  # Easily Install and Load the \"Tidyverse\" packages | https://tidyverse.tidyverse.org\n  'tidymodels', # Easily Install and Load the \"Tidymodels\" packages | https://tidymodels.tidymodels.org/\n  \n  # Programming & Development\n  'purrr',    # Functional Programming Tools | https://purrr.tidyverse.org/\n  'forcats',  # Tools for Working with Categorical Variables (Factors) | https://forcats.tidyverse.org/\n  'keyring',  # Package for accessing OS's credential store | https://keyring.r-lib.org/\n  'fs',       # Cross-Platform File System Operations Based on 'libuv' | https://fs.r-lib.org/\n\n  # Import\n  'readr',    # Read Rectangular Data | https://readr.tidyverse.org/\n  'httr2',    # Perform HTTP Requests and Process the Responses | https://httr2.r-lib.org/\n  'readxl',   # Read Excel Files | https://readxl.tidyverse.org/\n  'rvest',    # Easily Harvest (Scrape) Web Pages | https://rvest.tidyverse.org/\n  'jsonlite', # A Simple and Robust JSON Parser and Generator for R | https://jeroen.r-universe.dev/jsonlite\n  \n  # Tidy/Transform\n  'dplyr',     # A Grammar of Data Manipulation | https://dplyr.tidyverse.org/\n  'tidyr',     # Tidy Messy Data | https://tidyr.tidyverse.org/\n  'tibble',    # Simple Data Frames | https://tibble.tidyverse.org/\n  'stringr',   # Simple, Consistent Wrappers for Common String Operations | https://stringr.tidyverse.org/\n  'lubridate', # Make Dealing with Dates a Little Easier | https://lubridate.tidyverse.org/\n  'janitor',   # Simple Tools for Examining and Cleaning Dirty Data | https://sfirke.github.io/janitor/index.html \n\n  # Visualize\n  'ggplot2', # Create Elegant Data Visualizations Using the Grammar of Graphics | https://ggplot2.tidyverse.org/\n  \n  # Model\n  'rsample',   # General Re-sampling Infrastructure | https://rsample.tidymodels.org/\n  'parsnip',   # A Common API to Modeling and Analysis Functions | https://parsnip.tidymodels.org/\n  'recipes',   # Pre-processing and Feature Engineering Steps for Modeling | https://recipes.tidymodels.org/\n  'workflows', # Modeling Workflows | https://workflows.tidymodels.org/\n  'tune',      # Tidy Tuning Tools | https://tune.tidymodels.org/\n  'yardstick', # Tidy Characterizations of Model Performance | https://yardstick.tidymodels.org/\n  'broom',     # Convert Statistical Objects into Tidy Tibbles | https://broom.tidymodels.org/\n  'dials',     # Tools for Creating Tuning Parameter Values | https://dials.tidymodels.org/\n  'infer',     # Tidy Statistical Inference | https://infer.tidymodels.org/\n  'corrr',     # Correlations in R | https://corrr.tidymodels.org/\n  \n  # Communicate\n  'quarto', # R Interface to 'Quarto' Markdown Publishing System\n\n  # Database\n  'DBI',     # R Database Interface | https://dbi.r-dbi.org/index.html\n  'odbc',    # Connect to ODBC Compatible Databases (using the {DBI} Interface) | https://odbc.r-dbi.org/\n  'dbplyr',  # A {dplyr} Back End for Databases | https://dbplyr.tidyverse.org/\n  'duckdb',  # {DBI} Package for the DuckDB Database Management System | https://r.duckdb.org/\n  'duckplyr' # A DuckDB-backed Version of {dplyr} | https://duckdblabs.github.io/duckplyr/\n))\n\n# Other packages I'm interested in:\n# 'profvis'  # Interactive Visualizations for Profiling R Code | https://rstudio.github.io/profvis/\n# 'targets'  # Pipelining Tools in R | https://docs.ropensci.org/targets/\n# 'testthat' # Unit Testing for R | https://testthat.r-lib.org\n# 'usethis'  # Automate Package and Project Setup | https://usethis.r-lib.org/\n# 'devtools' # Tools to Make Developing R Packages Easier | https://devtools.r-lib.org/\n# 'zoo'      # S3 Infrastructure for Regular and Irregular Time Series (Z's Ordered Observations) | https://zoo.R-Forge.R-project.org/\n```\n:::\n\n\n\n# RStudio IDE Configuration\n\nAs I've been using R & RStudio, I've learned which settings I like the most, whether they are RStudio settings or R options, as well as some custom snippets. This section of code takes the respective files and copies them to where the base files for R and RStudioa are. I really created this because of my job where we log into different virtual machines, and I got sick of resetting all of these options by hand, so now I just pull this repo from GitHub and run the code.\n\nThe directories don't exist by default, they are created when you manually change the respective settings, so this chunk takes care of that, especially if it's a fresh install of RStudio.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npurrr::walk(\n  .x = c('themes', 'keybindings', 'snippets'),\n  .f = \\(directory) stringr::str_c(\"C:/Users/\", {Sys.info()[['user']]}, \"/AppData/Roaming/RStudio/\", directory) |> fs::dir_create()\n)\n```\n:::\n\n\n\nThen we copy the files from this folder to their appropriate locations.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npurrr::pwalk(\n  .l = tibble::tribble(\n    ~file,                   ~destination,\n    'rstudio_bindings.json',  stringr::str_glue(\"C:/Users/{Sys.info()[['user']]}/AppData/Roaming/RStudio/keybindings/rstudio_bindings.json\"),\n    'KISS - OZBEKER.rstheme', stringr::str_glue(\"C:/Users/{Sys.info()[['user']]}/AppData/Roaming/RStudio/themes/KISS - OZBEKER.rstheme\"),\n    'r.snippets',             stringr::str_glue(\"C:/Users/{Sys.info()[['user']]}/AppData/Roaming/RStudio/snippets/r.snippets\"),\n    'rstudio-prefs.json',     stringr::str_glue(\"C:/Users/{Sys.info()[['user']]}/AppData/Roaming/RStudio/rstudio-prefs.json\"),\n    '.Rprofile',              stringr::str_glue(\"C:/Users/{Sys.info()[['user']]}/Documents/.Rprofile\")),\n  .f = \\(file, destination) fs::file_copy(path = file, new_path = destination, overwrite = TRUE)\n)\n```\n:::\n\n\n\n## \"Real\" Dark Mode & Theme\n\nI hate that when you use dark mode in RStudio, it's just this dark blue shade for the UI, not actually dark/black. Also, I'm really not a fan of any of the themes that come with RStudio. Luckily for me, GitHub user [rileytwo](https://github.com/rileytwo) made a fix for both of those problems for me.\n\n-   [{darkstudio}](https://github.com/rileytwo/darkstudio) is a package that turns the IDE elements to shades of black whenever you are using a theme with `rs-theme-is-dark: TRUE`.\n-   [Kiss: Keep It Stupid Simple](https://github.com/rileytwo/kiss) is a theme from Riley that just looks so good, it's been my go to for over a year now.\n\nIf either of these interest you, please go check them out as they have been the staple to my R experience and I like to support the creator as best as I can.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndevtools::install_github('rileytwo/darkstudio')\ndarkstudio::activate() # This requires admin privileges\n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}